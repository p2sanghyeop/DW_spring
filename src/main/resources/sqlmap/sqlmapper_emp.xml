<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- mybatis에 mapper경로를 적어야 한다 -->
<mapper namespace="com.example.first_spring.mapper.EmpMapper">
	<select id="getEmpList" resultType="EmpVO">
		SELECT
			empno,
			ename,
			job,
			sal
		FROM emp
	</select>
	<select id="getEmp" resultType="EmpVO">
		select *
		from emp e 
		inner join dept d 
		on e.DEPTNO = d.DEPTNO
		where empno = #{empno}
	</select>
	<select id="getName" resultType="EmpVO">
		SELECT
			ename,
			job
		FROM emp
		where ename like "%L%L%"
	</select><select id="getComm" resultType="EmpVO">
		select
			ename,
			comm
		from emp
		where comm is null
	</select>
	<select id="getHiredate" resultType="EmpVO">
	<![CDATA[
	select 
			ename,
			hiredate
		from emp
		where HIREDATE > '1980-12-17' and HIREDATE < '1982-01-23'
	]]>
		
	</select>
	<select id="getSal" resultType="EmpVO">
	<![CDATA[
		select
			empno,
			ename,
			job,
			comm
		from emp
		where 
			job = #{jobName} 
		and 
			sal >= #{sal}
		]]>
	</select>
	<select id="getOverSal" resultType="EmpVO">
	select
		ename,
		sal
	from emp
	where (DEPTNO = 10 or DEPTNO = 30) and sal > #{sal}
	</select>
	<select id="getMgr" resultType="EmpVO">
	select 
		ename,
		job,
		sal
	from emp
	where mgr is null
	</select>
	<select id="getOverHiredate" resultType="EmpVO">
	select 
		ename,
		job,
		hiredate,
		sal
	from emp
	where date_format(hiredate, '%Y') = #{year}
	</select>
	<select id="getMonth12" resultType="EmpVO">
	select 
		ename,
		sal
	from emp
	where date_format(hiredate, '%m') = #{month}
	</select>
	<select id="getJob" resultType="EmpVO">
	select 
		ename,
		hiredate,
		sal
	from emp 
	where job = #{jobName}
	limit 1
	</select>
	<select id="selectDeptNo" resultType="EmpVO">
		SELECT 
			d.DEPTNO 
		FROM emp as e
		RIGHT JOIN dept as d 
		ON e.DEPTNO = d.DEPTNO 
		WHERE e.EMPNO  is null 
	</select>
	<!-- oracle은 mybatis insert 할때  PK 문법이 다름(시퀀스를 추가해야 함) -->
	<insert id="insertEmp">
	insert into emp
	(
		empno, 
		ename,
		deptno,
		sal,
		hiredate
	)
	values
	(
		#{empno},
		#{ename},
		#{deptno},
		#{sal},
		#{hiredate}
	)
	</insert>
	<delete id="deleteEmp">
	delete from emp 
	where empno in (SELECT no.empno 
		FROM (SELECT * 
		FROM emp 
		WHERE sal > 3000
		 AND empno = #{empno}) as no);
	
	</delete>
	<update id="updateEmp">
	update emp
	set
		sal = #{sal},
		job = #{job}		
	where empno = #{empno}
	</update>
	<select id="countName" resultType="int">
	select 
		count(ename)
	from emp
	where ENAME like CONCAT(#{serch}, '%')
	</select>
	<!-- true가 파라미터로 들어오면 사수 있는 사람조회  -->
	<!-- false가 들어오면 사수없는 사람조회 -->
	<!-- mybatis는 boolean형이 없어서 문자로 조회해야함 -->
	<select id="selectEmpMgr" resultType="EmpVO">
	select
		empno,
		ename,
		mgr
	from emp
	where 1=1
	<if test= 'isMgr.equals("false")'>
		and mgr is null
	</if>
	<if test='isMgr.equals("ture")'>
		and mgr is not null
	</if>
	</select>
	<select id="getNumber" resultType="EmpVO">
	select
		empno,
		ename,
		comm,
		sal
	from emp
	where 1=1
	<if test='empno=0 or empno =null'>
	update emp 
	set sal = #{sal}
	</if>
	</select>
	<update id="updateEmpJobSal">
	update emp
	set job = #{job}
		sal = #{sal}
	where empno = #{empno}
	</update>
	<select id="selectEmpCommSal" resultType="EmpVO">
	select
		empno, 
		comm,
		sal
	from emp
	where empno = #{empno}
	</select>
	<update id="updateEmpSal">
	update emp
	set sal = #{sal}
	where empno = #{empno}
	</update>
</mapper>